[{"F:\\JS\\todolist\\src\\index.tsx":"1","F:\\JS\\todolist\\src\\reportWebVitals.ts":"2","F:\\JS\\todolist\\src\\api\\todolists-api.ts":"3","F:\\JS\\todolist\\src\\app\\store.ts":"4","F:\\JS\\todolist\\src\\app\\App.tsx":"5","F:\\JS\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts":"6","F:\\JS\\todolist\\src\\features\\TodolistsList\\todolists-reducer.ts":"7","F:\\JS\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx":"8","F:\\JS\\todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx":"9","F:\\JS\\todolist\\src\\components\\AddItemForm\\AddItemForm.tsx":"10","F:\\JS\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx":"11","F:\\JS\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx":"12","F:\\JS\\todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx":"13","F:\\JS\\todolist\\src\\utils\\error-utils.ts":"14","F:\\JS\\todolist\\src\\app\\app-reducer.ts":"15","F:\\JS\\todolist\\src\\features\\Login\\Login.tsx":"16","F:\\JS\\todolist\\src\\features\\Login\\authReducer.ts":"17"},{"size":752,"mtime":1631203639283,"results":"18","hashOfConfig":"19"},{"size":463,"mtime":1631280311056,"results":"20","hashOfConfig":"19"},{"size":3075,"mtime":1631280311025,"results":"21","hashOfConfig":"19"},{"size":1181,"mtime":1631209523531,"results":"22","hashOfConfig":"19"},{"size":2829,"mtime":1631276414194,"results":"23","hashOfConfig":"19"},{"size":5619,"mtime":1631280311052,"results":"24","hashOfConfig":"19"},{"size":4587,"mtime":1631280311150,"results":"25","hashOfConfig":"19"},{"size":4038,"mtime":1631276414210,"results":"26","hashOfConfig":"19"},{"size":4193,"mtime":1596715250000,"results":"27","hashOfConfig":"19"},{"size":1569,"mtime":1631280311013,"results":"28","hashOfConfig":"19"},{"size":1773,"mtime":1596295538000,"results":"29","hashOfConfig":"19"},{"size":948,"mtime":1631280311108,"results":"30","hashOfConfig":"19"},{"size":1092,"mtime":1596716576000,"results":"31","hashOfConfig":"19"},{"size":811,"mtime":1596719330000,"results":"32","hashOfConfig":"19"},{"size":1695,"mtime":1631280311092,"results":"33","hashOfConfig":"19"},{"size":3756,"mtime":1631280311138,"results":"34","hashOfConfig":"19"},{"size":2516,"mtime":1631280311082,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"114y99b",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\JS\\todolist\\src\\index.tsx",[],"F:\\JS\\todolist\\src\\reportWebVitals.ts",[],"F:\\JS\\todolist\\src\\api\\todolists-api.ts",[],"F:\\JS\\todolist\\src\\app\\store.ts",[],"F:\\JS\\todolist\\src\\app\\App.tsx",["75"],"import React, {useEffect} from 'react'\r\nimport './App.css'\r\nimport {AppBar, Button, Container, IconButton, LinearProgress, Toolbar, Typography} from '@material-ui/core'\r\nimport {Menu} from '@material-ui/icons'\r\nimport {TodolistsList} from '../features/TodolistsList/TodolistsList'\r\nimport {ErrorSnackbar} from '../components/ErrorSnackbar/ErrorSnackbar'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from './store'\r\nimport {RequestStatusType} from './app-reducer'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Login} from '../features/Login/Login'\r\nimport {initializeAppTC, logoutTC} from \"../features/Login/authReducer\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nfunction App({demo = false}: PropsType) {\r\n    const status = useSelector<AppRootStateType, RequestStatusType>((state) => state.app.status)\r\n    const isInitialized = useSelector<AppRootStateType, boolean>((state) => state.app.isInitialized)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>((state) => state.auth.isLoggedIn)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeAppTC())\r\n    }, [])\r\n\r\n    const onCLickHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isInitialized) {\r\n        return <div\r\n            style={{position: 'fixed', top: '30%', textAlign: 'center', width: '100%'}}>\r\n            <CircularProgress/>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ErrorSnackbar/>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={'headerWrapper'}>\r\n                    <div className={'leftSideWrapper'}>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                            <Menu/>\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\">\r\n                            News\r\n                        </Typography>\r\n                    </div>\r\n                    {isLoggedIn &&\r\n                    <Button className={'logoutBtn'} color=\"inherit\" onClick={onCLickHandler}>Log Out</Button>}\r\n                </Toolbar>\r\n                {status === 'loading' && <LinearProgress color={'secondary'}/>}\r\n            </AppBar>\r\n            <Container fixed>\r\n                <Switch>\r\n                    <Route exact path={'/todolist'} render={() => <TodolistsList demo={demo}/>}/>\r\n                    <Route path={'/todolist/login'} render={() => <Login/>}/>\r\n                    <Route path={'/todolist/404'} render={() => <h1>404: PAGE NOT FOUND</h1>}/>\r\n                    <Redirect from={'*'} to={'/404'}/>\r\n                </Switch>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","F:\\JS\\todolist\\src\\features\\TodolistsList\\tasks-reducer.ts",[],"F:\\JS\\todolist\\src\\features\\TodolistsList\\todolists-reducer.ts",[],"F:\\JS\\todolist\\src\\features\\TodolistsList\\TodolistsList.tsx",["76","77","78","79","80","81","82","83"],"import React, {useCallback, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {\r\n    addTodolistTC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleTC,\r\n    fetchTodolistsTC,\r\n    FilterValuesType,\r\n    removeTodolistTC,\r\n    TodolistDomainType\r\n} from './todolists-reducer'\r\nimport {addTaskTC, removeTaskTC, TasksStateType, updateTaskTC} from './tasks-reducer'\r\nimport {TaskStatuses} from '../../api/todolists-api'\r\nimport {Grid, Paper} from '@material-ui/core'\r\nimport {AddItemForm} from '../../components/AddItemForm/AddItemForm'\r\nimport {Todolist} from './Todolist/Todolist'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    demo?: boolean\r\n}\r\n\r\nexport const TodolistsList: React.FC<PropsType> = ({demo = false}) => {\r\n    const todolists = useSelector<AppRootStateType, Array<TodolistDomainType>>(state => state.todolists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.auth.isLoggedIn)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (demo || !isLoggedIn) {\r\n            return;\r\n        }\r\n        const thunk = fetchTodolistsTC()\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const removeTask = useCallback(function (id: string, todolistId: string) {\r\n        const thunk = removeTaskTC(id, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback(function (title: string, todolistId: string) {\r\n        const thunk = addTaskTC(title, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback(function (id: string, status: TaskStatuses, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {status}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTaskTitle = useCallback(function (id: string, newTitle: string, todolistId: string) {\r\n        const thunk = updateTaskTC(id, {title: newTitle}, todolistId)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeFilter = useCallback(function (value: FilterValuesType, todolistId: string) {\r\n        const action = changeTodolistFilterAC(todolistId, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodolist = useCallback(function (id: string) {\r\n        const thunk = removeTodolistTC(id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const changeTodolistTitle = useCallback(function (id: string, title: string) {\r\n        const thunk = changeTodolistTitleTC(id, title)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTodolist = useCallback((title: string) => {\r\n        const thunk = addTodolistTC(title)\r\n        dispatch(thunk)\r\n    }, [dispatch])\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/todolist/login'}/>\r\n    }\r\n\r\n    return <>\r\n        <Grid container style={{padding: '20px'}}>\r\n            <AddItemForm addItem={addTodolist}/>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n            {\r\n                todolists.map(tl => {\r\n                    let allTodolistTasks = tasks[tl.id]\r\n\r\n                    return <Grid item key={tl.id}>\r\n                        <Paper style={{padding: '10px'}}>\r\n                            <Todolist\r\n                                todolist={tl}\r\n                                tasks={allTodolistTasks}\r\n                                removeTask={removeTask}\r\n                                changeFilter={changeFilter}\r\n                                addTask={addTask}\r\n                                changeTaskStatus={changeStatus}\r\n                                removeTodolist={removeTodolist}\r\n                                changeTaskTitle={changeTaskTitle}\r\n                                changeTodolistTitle={changeTodolistTitle}\r\n                                demo={demo}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                })\r\n            }\r\n        </Grid>\r\n    </>\r\n}\r\n","F:\\JS\\todolist\\src\\features\\TodolistsList\\Todolist\\Todolist.tsx",["84","85","86","87","88","89"],"import React, {useCallback, useEffect} from 'react'\r\nimport {AddItemForm} from '../../../components/AddItemForm/AddItemForm'\r\nimport {EditableSpan} from '../../../components/EditableSpan/EditableSpan'\r\nimport {Button, IconButton} from '@material-ui/core'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {Task} from './Task/Task'\r\nimport {TaskStatuses, TaskType} from '../../../api/todolists-api'\r\nimport {FilterValuesType, TodolistDomainType} from '../todolists-reducer'\r\nimport {useDispatch} from 'react-redux'\r\nimport {fetchTasksTC} from '../tasks-reducer'\r\n\r\ntype PropsType = {\r\n    todolist: TodolistDomainType\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    demo?: boolean\r\n}\r\n\r\nexport const Todolist = React.memo(function ({demo = false, ...props}: PropsType) {\r\n    console.log('Todolist called')\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (demo) {\r\n            return\r\n        }\r\n        const thunk = fetchTasksTC(props.todolist.id)\r\n        dispatch(thunk)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.todolist.id)\r\n    }, [props.addTask, props.todolist.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.todolist.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.todolist.id, title)\r\n    }, [props.todolist.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.todolist.id), [props.todolist.id, props.changeFilter])\r\n\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.todolist.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.New)\r\n    }\r\n    if (props.todolist.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.status === TaskStatuses.Completed)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.todolist.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist} disabled={props.todolist.entityStatus === 'loading'}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask} disabled={props.todolist.entityStatus === 'loading'}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task key={t.id} task={t} todolistId={props.todolist.id}\r\n                                                removeTask={props.removeTask}\r\n                                                changeTaskTitle={props.changeTaskTitle}\r\n                                                changeTaskStatus={props.changeTaskStatus}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.todolist.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'default'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.todolist.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n",["90","91"],"F:\\JS\\todolist\\src\\components\\AddItemForm\\AddItemForm.tsx",[],"F:\\JS\\todolist\\src\\features\\TodolistsList\\Todolist\\Task\\Task.tsx",["92","93","94"],"import React, {ChangeEvent, useCallback} from 'react'\r\nimport {Checkbox, IconButton} from '@material-ui/core'\r\nimport {EditableSpan} from '../../../../components/EditableSpan/EditableSpan'\r\nimport {Delete} from '@material-ui/icons'\r\nimport {TaskStatuses, TaskType} from '../../../../api/todolists-api'\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    changeTaskStatus: (id: string, status: TaskStatuses, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = useCallback(() => props.removeTask(props.task.id, props.todolistId), [props.task.id, props.todolistId]);\r\n\r\n    const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.todolistId]);\r\n\r\n    return <div key={props.task.id} className={props.task.status === TaskStatuses.Completed ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.status === TaskStatuses.Completed}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n","F:\\JS\\todolist\\src\\components\\EditableSpan\\EditableSpan.tsx",[],"F:\\JS\\todolist\\src\\components\\ErrorSnackbar\\ErrorSnackbar.tsx",[],"F:\\JS\\todolist\\src\\utils\\error-utils.ts",[],"F:\\JS\\todolist\\src\\app\\app-reducer.ts",[],"F:\\JS\\todolist\\src\\features\\Login\\Login.tsx",["95"],"F:\\JS\\todolist\\src\\features\\Login\\authReducer.ts",[],{"ruleId":"96","severity":1,"message":"97","line":28,"column":8,"nodeType":"98","endLine":28,"endColumn":10,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":36,"column":8,"nodeType":"98","endLine":36,"endColumn":10,"suggestions":"101"},{"ruleId":"96","severity":1,"message":"102","line":41,"column":8,"nodeType":"98","endLine":41,"endColumn":10,"suggestions":"103"},{"ruleId":"96","severity":1,"message":"102","line":46,"column":8,"nodeType":"98","endLine":46,"endColumn":10,"suggestions":"104"},{"ruleId":"96","severity":1,"message":"102","line":51,"column":8,"nodeType":"98","endLine":51,"endColumn":10,"suggestions":"105"},{"ruleId":"96","severity":1,"message":"102","line":56,"column":8,"nodeType":"98","endLine":56,"endColumn":10,"suggestions":"106"},{"ruleId":"96","severity":1,"message":"102","line":61,"column":8,"nodeType":"98","endLine":61,"endColumn":10,"suggestions":"107"},{"ruleId":"96","severity":1,"message":"102","line":66,"column":8,"nodeType":"98","endLine":66,"endColumn":10,"suggestions":"108"},{"ruleId":"96","severity":1,"message":"102","line":71,"column":8,"nodeType":"98","endLine":71,"endColumn":10,"suggestions":"109"},{"ruleId":"96","severity":1,"message":"110","line":35,"column":8,"nodeType":"98","endLine":35,"endColumn":10,"suggestions":"111"},{"ruleId":"96","severity":1,"message":"112","line":39,"column":8,"nodeType":"98","endLine":39,"endColumn":42,"suggestions":"113"},{"ruleId":"96","severity":1,"message":"112","line":46,"column":8,"nodeType":"98","endLine":46,"endColumn":54,"suggestions":"114"},{"ruleId":"96","severity":1,"message":"112","line":48,"column":95,"nodeType":"98","endLine":48,"endColumn":134,"suggestions":"115"},{"ruleId":"96","severity":1,"message":"112","line":49,"column":101,"nodeType":"98","endLine":49,"endColumn":140,"suggestions":"116"},{"ruleId":"96","severity":1,"message":"112","line":50,"column":107,"nodeType":"98","endLine":50,"endColumn":146,"suggestions":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"96","severity":1,"message":"112","line":15,"column":97,"nodeType":"98","endLine":15,"endColumn":130,"suggestions":"122"},{"ruleId":"96","severity":1,"message":"112","line":20,"column":8,"nodeType":"98","endLine":20,"endColumn":41,"suggestions":"123"},{"ruleId":"96","severity":1,"message":"112","line":24,"column":8,"nodeType":"98","endLine":24,"endColumn":41,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":62,"column":29,"nodeType":"127","messageId":"128","endLine":63,"endColumn":50,"fix":"129"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'isLoggedIn'. Either include them or remove the dependency array.",["131"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["132"],["133"],["134"],["135"],["136"],["137"],["138"],"React Hook useEffect has missing dependencies: 'demo', 'dispatch', and 'props.todolist.id'. Either include them or remove the dependency array.",["139"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["140"],["141"],["142"],["143"],["144"],"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["147"],["148"],["149"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"150","text":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"152","fix":"156"},{"desc":"152","fix":"157"},{"desc":"152","fix":"158"},{"desc":"152","fix":"159"},{"desc":"152","fix":"160"},{"desc":"152","fix":"161"},{"desc":"152","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"165","fix":"167"},{"desc":"165","fix":"168"},{"desc":"165","fix":"169"},{"desc":"165","fix":"170"},"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"171"},{"desc":"165","fix":"172"},{"desc":"165","fix":"173"},[1989,1989]," rel=\"noreferrer\"","Update the dependencies array to be: [dispatch]",{"range":"174","text":"175"},"Update the dependencies array to be: [demo, dispatch, isLoggedIn]",{"range":"176","text":"177"},{"range":"178","text":"175"},{"range":"179","text":"175"},{"range":"180","text":"175"},{"range":"181","text":"175"},{"range":"182","text":"175"},{"range":"183","text":"175"},{"range":"184","text":"175"},"Update the dependencies array to be: [demo, dispatch, props.todolist.id]",{"range":"185","text":"186"},"Update the dependencies array to be: [props]",{"range":"187","text":"188"},{"range":"189","text":"188"},{"range":"190","text":"188"},{"range":"191","text":"188"},{"range":"192","text":"188"},{"range":"193","text":"188"},{"range":"194","text":"188"},{"range":"195","text":"188"},[1240,1242],"[dispatch]",[1326,1328],"[demo, dispatch, isLoggedIn]",[1497,1499],[1668,1670],[1873,1875],[2086,2088],[2287,2289],[2434,2436],[2613,2615],[1464,1466],"[demo, dispatch, props.todolist.id]",[1581,1615],"[props]",[1846,1892],[1991,2030],[2133,2172],[2281,2320],[765,798],[1071,1104],[1261,1294]]